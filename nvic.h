#ifndef _NVIC__H
#define _NVIC__H

enum interrupt_vectors
{
   INT_VEC_WWDG,
   INT_VEC_PVD,
   INT_VEC_TAMPER,
   INT_VEC_RTC,
   INT_VEC_FLASH,
   INT_VEC_RCC,
   INT_VEC_EXTI0,
   INT_VEC_EXTI1,
   INT_VEC_EXTI2,
   INT_VEC_EXTI3,
   INT_VEC_EXTI4,
   INT_VEC_DMA1_C1,
   INT_VEC_DMA1_C2,
   INT_VEC_DMA1_C3,
   INT_VEC_DMA1_C4,
   INT_VEC_DMA1_C5,
   INT_VEC_DMA1_C6,
   INT_VEC_DMA1_C7,
   INT_VEC_ADC1_2,
   INT_VEC_USB_HP_CAN_TX,
   INT_VEC_USB_LP_CAN_RX,
   INT_VEC_CAN_RX1,
   INT_VEC_CAN_SCE,
   INT_VEC_EXTI5_9,
   INT_VEC_TIM1_BRK,
   INT_VEC_TIM1_UP,
   INT_VEC_TIM1_TRG_COM,
   INT_VEC_TIM1_CC,
   INT_VEC_TIM2,
   INT_VEC_TIM3,
   INT_VEC_TIM4,
   INT_VEC_I2C1_EV,
   INT_VEC_I2C1_ER,
   INT_VEC_I2C2_EV,
   INT_VEC_I2C2_ER,
   INT_VEC_SPI1,
   INT_VEC_SPI2,
   INT_VEC_USART1,
   INT_VEC_USART2,
   INT_VEC_USART3,
   INT_VEC_EXTI10_15,
   INT_VEC_RTC_ALARM,
   INT_VEC_USB_FS_WKUP,
   INT_VEC_TIM8_BRK,
   INT_VEC_TIM8_UP,
   INT_VEC_TIM8_TRG_COM,
   INT_VEC_TIM8_CC,
   INT_VEC_ADC3,
   INT_VEC_FSMC,
   INT_VEC_SDIO,
   INT_VEC_TIM5,
   INT_VEC_SPI3,
   INT_VEC_UART4,
   INT_VEC_UART5,
   INT_VEC_TIM6,
   INT_VEC_TIM7,
   INT_VEC_DMA2_C1,
   INT_VEC_DMA2_C2,
   INT_VEC_DMA2_C3,
   INT_VEC_DMA2_C4_5,
};

void NVIC_DisableInterrupts();
void NVIC_enableInt(int vecnum, int priority);
void NVIC_setPending(int vecnum);
void NVIC_clearPending(int vecnum);

#endif // _NVIC__H
